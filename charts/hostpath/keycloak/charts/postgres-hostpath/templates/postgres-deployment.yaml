apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ tpl .Values.postgres.deployment.name . }}
  labels:
    app: {{ tpl .Values.postgres.deployment.name . }}
spec:
  replicas: {{ .Values.postgres.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ tpl .Values.postgres.deployment.name . }}
  template:
    metadata:
      labels:
        app: {{ tpl .Values.postgres.deployment.name . }}
    spec:
      volumes:
        - name: {{ .Values.postgres.deployment.hostPath.name }}
          hostPath:
            path: {{ tpl .Values.postgres.deployment.hostPath.mountPath . }}
            type: DirectoryOrCreate
      containers:
        - name: postgres
          image: {{ .Values.postgres.deployment.image }}
          volumeMounts:
            - mountPath: {{ .Values.postgres.deployment.hostPath.volumeMountPath }}
              name: {{ .Values.postgres.deployment.hostPath.name }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: DB_USER
                  name: {{ tpl .Values.postgres.secrets.secretName . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: {{ tpl .Values.postgres.secrets.secretName . }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.deployment.db.name }}
            - name: POSTGRES_HOST_AUTH_METHOD
              value: {{ .Values.postgres.deployment.db.auth }}
          ports:
            - name: http
              containerPort: 5432