{{ $values := $.Values }}
  {{ $replicaCount := .Values.replicaCount | int }}
  {{ $ringname := tpl .Values.ring.name . }}
  {{ $ringnum := .Values.ring.number | int }}
  {{ $ports := .Values.ports }}

{{/*  {{ range $i, $e := until $replicaCount }}*/}}

{{/*  {{ $counter := add $i 1}}*/}}

apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: "{{ $ringname }}"
  generation: 1
  labels:
    app: "{{ $ringname }}"
    kubevirt.io/os: linux
spec:
  running: {{ $values.running }}
  template:
    metadata:
      labels:
        kubevirt.io/domain: "{{ $ringname }}"
    spec:
      domain:
        cpu:
          cores: {{ $values.resources.requests.dedicated.cpu }}
        devices:
          disks:
            - name: extra
              disk: {}
            - name: disk0
              bootOrder: 1
              disk:
                bus: sata
            - name: cloudinit
              cdrom:
                bus: sata
                readonly: true
          interfaces:
            - name: default
              bridge: {}
              macAddress: {{ $values.machine.mac }}
        machine:
          type: {{ $values.machine.type }}
        resources:
          requests:
            memory: {{ $values.resources.requests.memory }}
            cpu: {{ $values.resources.requests.cpu }}
      networks:
        - name: default
          pod: {}
      volumes:
        - name: extra
          hostDisk:
            capacity: {{ $values.resources.requests.storage }}
            path: "{{ $values.hostpath }}/vm/{{ .Release.Namespace }}/{{ $ringname }}/img_extra_{{ $ringname }}.img"
            type: DiskOrCreate
        - name: disk0
          dataVolume:
            name: ubuntu-dv
        - name: cloudinit
          cloudInitNoCloud:
            userData: |
              #cloud-config
              hostname: "{{ $ringname }}"
              users:
              - name: proto
                ssh-authorized-keys:
                - {{ $values.ssh.publicKey }}
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                groups: sudo
                shell: /bin/bash
              chpasswd:
                list: |
                  root:toor
                expire: False
              write_files:
              - path: /etc/run/config
                encoding: b64
                permissions: "0644"
                content: "{{ $values.run.config }}"
                owner: proto:proto
              - path: /etc/run/image
                permissions: "0644"
                content: "{{ $values.run.image }}"
                owner: proto:proto
  dataVolumeTemplates:
  - metadata:
      name: ubuntu-dv
    spec:
      pvc:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ $values.resources.requests.storage }}
      source:
        http:
          url: https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ $ringname }}-svc"
spec:
{{/*  externalTrafficPolicy: Cluster*/}}
  ports:
  {{- range $ports }}
    - name: "{{ .name }}"
      port: {{ .port }}
      targetPort: {{ .targetport }}
  {{- end }}
  selector:
{{/*    app: "{{ $ringname }}"*/}}
    kubevirt.io/domain: {{ $ringname }}
  type: LoadBalancer
  loadBalancerIP: "10.4.4.{{ $ringnum }}"
---
{{/*  {{ end }}*/}}
